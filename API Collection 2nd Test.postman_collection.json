{
	"info": {
		"_postman_id": "4e9a99d6-9ae5-4599-873d-421818c45432",
		"name": "API Collection 2nd Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24231737"
	},
	"item": [
		{
			"name": "Get all Entiries",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData);\r",
									"console.log(jsonData.apiVersion);\r",
									"console.log(jsonData.title);\r",
									"console.log(jsonData.paymentCurrency);\r",
									"console.log(jsonData.categories[\"3\"]);\r",
									"console.log(jsonData.categories);\r",
									"console.log(jsonData.categories[\"2\"]);\r",
									"console.log(jsonData.categories[\"0\"]);\r",
									"console.log(jsonData.scopes);\r",
									"pm.environment.set(\"apiVersion\", jsonData.apiVersion);\r",
									"pm.environment.set(\"tittle\", jsonData.title);\r",
									"pm.environment.set(\"variable_key\", \"variable_value\");\r",
									"pm.test(\"Status code should 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"confirm tittle should be fusio\", function () {\r",
									"    pm.expect(jsonData.title).to.eql(\"Fusio\");\r",
									"    });\r",
									"    pm.test(\"confirm categories [3] is backend\", function () {\r",
									"    pm.expect(jsonData.categories[\"3\"]).to.eql(\"backend\");\r",
									"    });\r",
									"     pm.test(\"confirm categories [2] is backend\", function () {\r",
									"    pm.expect(jsonData.categories[\"2\"]).to.eql(\"consumer\");\r",
									"    });\r",
									"    pm.test(\"Confirm that paymentCurrency is EUR\", function () {\r",
									"    pm.expect(jsonData.paymentCurrency).to.eql( 'EUR');\r",
									"    });\r",
									"     pm.test(\"Confirm that apiVersion is 6.3.8.0\", function () {\r",
									"    pm.expect(jsonData.apiVersion).to.eql( '6.3.8.0');\r",
									"    });\r",
									" pm.test(\"Confirm authorization is present\", function () {\r",
									" pm.expect(pm.response.text()).to.include(\"authorization\");\r",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/index.php/",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"index.php",
								""
							]
						},
						"description": "https://demo.fusio-project.org/index.php/"
					},
					"response": []
				}
			]
		},
		{
			"name": "lesson8 task",
			"item": [
				{
					"name": "Get a valid Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"console.log(response[3].id);\r",
									"console.log(response[3].name);\r",
									"console.log(response[3].type);\r",
									"\r",
									"pm.environment.set(\"JustMeId\", response[3].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl4Book}}/books?type=fiction",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "type",
									"value": "fiction"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Place a book order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const OrderID = pm.response.json();\r",
									"\r",
									"pm.test(\"Status should be 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Status code name should have Created string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"console.log(OrderID.orderId);\r",
									"pm.environment.set(\"OrderID\", OrderID.orderId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "7ac108dd52d0815e48818ec194120d6707f2366b5028d76dd87a02ce295336a9",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookId\": {{JustMeId}},\n  \"customerName\": \"Princess12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/orders",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should be No Content\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/orders/:orderId",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{OrderID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerName\": \"John\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/orders/:orderId",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{OrderID}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get a single book",
			"item": [
				{
					"name": "Get a single book with a valid bookid Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/books/:bookId?=",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "bookId",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single book with a blank entity",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/books/:bookId?=",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "bookId",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single book with a bookID 0 (below limit)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/books/:bookId?=",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "bookId",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single book with a bookID 7 (above limit)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/books/:bookId?=",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "bookId",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list of books",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl4Book}}/books",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "Limit",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get an Order",
			"item": [
				{
					"name": "Get an order",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerName\": \"Princess1405\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/orders/:orderId",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{OrderID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order with an invalid \"customer's name\" entity.",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerName\": @\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/orders/:orderId",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{OrderID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order Copy with  an invalid bearer token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerName\": \"Princess1405\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/orders/:orderId",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "Ynn5h5BKK2Ua8WxMe89HF"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order with in-valid order ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerName\": \"John\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/orders/:orderId",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "qxzS1B9A1BHx64GTssixy"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Place a book order",
			"item": [
				{
					"name": "Register an API Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Status code name has string Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"clientName\": \"Princess140765\",\n   \"clientEmail\": \"princess1405@mailinator.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api-clients/",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api-clients",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Place a book order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const OrderId = pm.response.json();\r",
									"\r",
									"console.log(OrderId.orderId);\r",
									"pm.globals.set(\"OrderId\", OrderId.orderId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookId\": 3,\n  \"customerName\": \"{}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place a book order with no bearer token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const OrderId = pm.response.json();\r",
									"\r",
									"console.log(OrderId.orderId);\r",
									"pm.globals.set(\"OrderId\", OrderId.orderId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookId\": 6,\n  \"customerName\": \"Princess1405\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place a book order with a wrong bearer token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const OrderId = pm.response.json();\r",
									"\r",
									"console.log(OrderId.orderId);\r",
									"pm.globals.set(\"OrderId\", OrderId.orderId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "7e952d9041e7f1175d037a740ea08ab6cd355f19370c5f4c02986db0d",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookId\": 6,\n  \"customerName\": \"Princess1405\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place a book order with an empty entity(Book Id / Customer's name )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const OrderId = pm.response.json();\r",
									"\r",
									"console.log(OrderId.orderId);\r",
									"pm.globals.set(\"OrderId\", OrderId.orderId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "7e952d9041e7f1175d037a740ea08ab6cd355f19370c5f4c02986db0d2102895",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookId\": ,\n  \"customerName\": \"Princess1405\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Orders",
			"item": [
				{
					"name": "Get all orders ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders?book=",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "book",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all orders fiction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders?book=fiction",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "book",
									"value": "fiction"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders/:orderId?book=",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"query": [
								{
									"key": "book",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "orderId",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all orders non-fiction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "7e952d9041e7f1175d037a740ea08ab6cd355f19370c5f4c02986db0d2102895",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl4Book}}/orders?book=non-fiction",
							"host": [
								"{{BaseUrl4Book}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "book",
									"value": "non-fiction"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Todo Entries",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Baseurl}}/index.php/todo",
					"host": [
						"{{Baseurl}}"
					],
					"path": [
						"index.php",
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get entry per ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Baseurl}}/todo/?todo_id=2",
					"host": [
						"{{Baseurl}}"
					],
					"path": [
						"todo",
						""
					],
					"query": [
						{
							"key": "todo_id",
							"value": "2"
						}
					]
				},
				"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
			},
			"response": []
		},
		{
			"name": "Get all orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "03c5abfe090876ab74a2a2ac4c079174a35fd88c9b88cd2164ff4b9d56c31d6c",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl4Book}}/orders",
					"host": [
						"{{BaseUrl4Book}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Place a book order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const OrderId = pm.response.json();\r",
							"\r",
							"console.log(OrderId.orderId);\r",
							"pm.globals.set(\"OrderId\", OrderId.orderId);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "03c5abfe090876ab74a2a2ac4c079174a35fd88c9b88cd2164ff4b9d56c31d6c",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bookId\": 1,\n  \"customerName\": \"John\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl4Book}}/orders",
					"host": [
						"{{BaseUrl4Book}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		}
	]
}